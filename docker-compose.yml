version: '3.6'
services:
  web:
    image: nginx:latest
    hostname: server
    ports:
      - "8080:80"
    volumes:
      - ./src:/var/www/public
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - php
      - grafana
    networks:
      tig:

  php:
    image: php:8-fpm
    container_name: php
    hostname: backend
    ports:
      - 9000:9000
    volumes:
      - ./src:/var/www/public
      - ./php/www.conf:/usr/local/etc/php-fpm.d/www.conf
    networks:
      tig:

  elasticsearch:
    image: elasticsearch:8.1.3
    container_name: es-container
    ports:
      - 9200:9200
    networks:
      tig:

  mongo:
    image: mongo
    container_name: mongo-container
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - 27017:27017
    networks:
      tig:


  telegraf:
    image: telegraf:1.18-alpine
    hostname: telegraf
    entrypoint: telegraf
    container_name: telegraf
    volumes:
      - ./telegraf/etc/telegraf.conf:/etc/telegraf/telegraf.conf:ro
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - interval=60s
      - flush_interval=60s
    depends_on:
      - influxdb
      - web
      - php
      - elasticsearch
      - mongo
    links:
      - influxdb
    ports:
    - '127.0.0.1:8125:8125/udp'
    networks:
      tig:

  influxdb:
    image: influxdb:1.8-alpine
    env_file: configuration.env
    ports:
      - '127.0.0.1:8086:8086'
    volumes:
      - ./:/imports
      - influxdb_data:/var/lib/influxdb
    networks:
      tig:

  grafana:
    image: grafana/grafana:8.0.2
    depends_on:
      - influxdb
    env_file: configuration.env
    ports:
      - '127.0.0.1:3000:3000'
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
      - ./grafana/dashboards/:/var/lib/grafana/dashboards/
    networks:
      tig:

networks:
  tig:

volumes:
  grafana_data: {}
  influxdb_data: {}
